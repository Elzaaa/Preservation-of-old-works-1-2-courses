#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;
#define PI 3.14159265

//did with Tanya

struct dot  // (x,y)
{
	double x;
	double y;
};

struct LineSegment
{
	dot A;
	dot B;
};

struct triangle
{
	dot A;
	dot B;
	dot C;
};

double AngleFromTeorCos(double a, double b, double c)
{
	return acos(((b*b) + (c*c) - (a*a)) / (2 * b*c)) * 180.0 / PI;// (180.0 / PI)-convert radians to degrees
}

double LengthOfSegment(LineSegment seg)
{
	// AB= sqrt( (Xb-Xa)^2 + (Yb-Ya)^2 ) Where: A(Xa;Ya) && B(Xb;Yb)
	return 	sqrt(((seg.B.x - seg.A.x) * (seg.B.x - seg.A.x)) + ((seg.B.y - seg.A.y)* (seg.B.y - seg.A.y)));
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	double dLina_a, dLina_b, dLina_c, dAngle;
	triangle S;
	cin >> S.A.x >> S.A.y >> S.B.x >> S.B.y >> S.C.x >> S.C.y;

	LineSegment a;
	LineSegment b;
	LineSegment c;
	//line BC *coordinates*
	a.A.x = S.B.x;
	a.A.y = S.B.y;

	a.B.x = S.C.x;
	a.B.y = S.C.y;

	dLina_a = LengthOfSegment(a);//OMG this is line! Unfortunately, the ability to make a line does not make Michelangelo of me :'C

	// line AC
	b.A.x = S.A.x;
	b.A.y = S.A.y;

	b.B.x = S.C.x;
	b.B.y = S.C.y;

	dLina_b = LengthOfSegment(b);

	//line AB
	c.A.x = S.B.x;
	c.A.y = S.B.y;

	c.B.x = S.A.x;
	c.B.y = S.A.y;

	dLina_c = LengthOfSegment(c);

	// the larger angle opposite the larger side
	if (dLina_a > dLina_b && dLina_a > dLina_c)
	{
		dAngle = AngleFromTeorCos(dLina_a, dLina_b, dLina_c);//the big line goes first
	}
	else
	{
		if (dLina_b > dLina_a && dLina_b > dLina_c)
		{
			dAngle = AngleFromTeorCos(dLina_b, dLina_a, dLina_c);
		}
		else
		{
			if (dLina_c > dLina_a&& dLina_c > dLina_b)
			{
				dAngle = AngleFromTeorCos(dLina_c, dLina_a, dLina_b);
			}
			else
			{
				dAngle = AngleFromTeorCos(dLina_a, dLina_b, dLina_c);//if they are all equal then it doesn't matter
			}
		}
	}

	cout << fixed << setprecision(6) << dAngle << endl;
	return 0;
}