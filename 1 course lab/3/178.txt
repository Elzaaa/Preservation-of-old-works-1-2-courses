#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;
#define PI 3.141592653589793238462643
struct dot  // (x,y)
{
	double x;
	double y;
};

struct line // ax+by+c = 0
{
	double a;
	double b;
	double c;
};

struct LineSegment
{
	dot A;
	dot B;
};

struct triangle
{
	dot A;
	dot B;
	dot C;
};
struct vector_normaiy
{
	// ax+by = 0
	double a;
	double b;
};


int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	double dLine_a, dLine_b, dLine_c, dAngle_a, dAngle_b, dAngle_c;
	cin >> dLine_a >> dAngle_c >> dAngle_b;

	triangle Isk;
	Isk.A.x = 0;//build the first point at (0; 0)
	Isk.A.y = 0;

	Isk.B.x = dLine_a;/*since we are building the first point (0; 0)the coordinate B.x of the second point will be (0 + dLine_a; 0)*/
	Isk.B.y = 0;

	dAngle_a = (180 - (dAngle_b + dAngle_c));
	//sin teorem 
	dLine_b = dLine_a*sin((dAngle_b * PI) / 180) / sin((dAngle_a * PI) / 180);
	
	//immediately translate to degrees from radians
	Isk.C.y = dLine_b * sin((dAngle_c * PI) / 180);//sin (x) angle = (height/dLinr_b)
	Isk.C.x = dLine_b * cos((dAngle_c * PI) / 180);//cos (x) angle = (k/dLinr_b) k-leg adjacent to the corner

	cout << fixed << setprecision(11) << Isk.A.x << " " << Isk.A.y << endl;
	cout << fixed << setprecision(11) << Isk.B.x << " " << Isk.B.y << endl;
	cout << fixed << setprecision(11) << Isk.C.x << " " << Isk.C.y << endl;
	return 0;
}