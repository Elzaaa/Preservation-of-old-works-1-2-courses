#include <vector>
#include <string>
#include <iostream>
using namespace std;
void KnuthMorrisPratt(string sOriginal)
{
	int iBegin = 0;
	string sPattern;
	cin >> sPattern;

	vector<int> pf(sPattern.length());
	pf[0] = 0;
	for (int k = 0, i = 1; i < sPattern.length(); ++i)
	{
		while ((k > 0) && (sPattern[i] != sPattern[k]))
		{
			k = pf[k - 1];
		}

		if (sPattern[i] == sPattern[k])
		{
			k++;
		}

		pf[i] = k;
	}

	for (int k = 0, i = iBegin; i < sOriginal.length(); ++i)
	{
		while ((k > 0) && (sPattern[k] != sOriginal[i]))
		{
			k = pf[k - 1];
		}

		if (sPattern[k] == sOriginal[i])
		{
			k++;
		}

		if (k == sPattern.length())
		{
			cout << (i - sPattern.length() + 2) << " "; //либо продолжаем поиск следующих вхождений
		}

	}
}
int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int iNumPattern;
	string sString;

	cin >> sString;
	cin >> iNumPattern;

	for (int i = 0; i < iNumPattern; ++i)
	{
		KnuthMorrisPratt(sString);
		cout << endl;
	}
	return 0;
}